"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var icbsc_numeric_1 = require("./icbsc-numeric");
var PublicKey = (function () {
    function PublicKey(key) {
        this.key = key;
    }
    PublicKey.fromString = function (publicKeyStr) {
        return new PublicKey(icbsc_numeric_1.stringToPublicKey(publicKeyStr));
    };
    PublicKey.fromElliptic = function (publicKey, keyType) {
        if (keyType === void 0) { keyType = icbsc_numeric_1.KeyType.k1; }
        var x = publicKey.getPublic().getX().toArray();
        var y = publicKey.getPublic().getY().toArray();
        return new PublicKey({
            type: keyType,
            data: new Uint8Array([(y[31] & 1) ? 3 : 2].concat(x)),
        });
    };
    PublicKey.prototype.toString = function () {
        return icbsc_numeric_1.publicKeyToString(this.key);
    };
    PublicKey.prototype.toElliptic = function (ecurve) {
        if (!ecurve) {
            if (this.key.type === icbsc_numeric_1.KeyType.r1) {
                ecurve = icbsc_numeric_1.r1Ec;
            }
            else if (this.key.type === icbsc_numeric_1.KeyType.k1) {
                ecurve = icbsc_numeric_1.defaultEc;
            }
            else if (this.key.type === icbsc_numeric_1.KeyType.sm2) {
                ecurve = icbsc_numeric_1.sm2Ec;
            }
        }
        return ecurve.keyPair({
            pub: new Buffer(this.key.data),
        });
    };
    return PublicKey;
}());
exports.PublicKey = PublicKey;
//# sourceMappingURL=PublicKey.js.map