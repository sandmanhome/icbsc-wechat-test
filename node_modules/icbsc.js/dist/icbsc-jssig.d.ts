import { SignatureProvider, SignatureProviderArgs } from './icbsc-api-interfaces';
import { PrivateKey, PublicKey, Signature } from './icbsc-key-conversions';
declare function digestFromSerializedData(chainId: string, serializedTransaction: Uint8Array, serializedContextFreeData?: Uint8Array, e?: any): any;
declare class JsSignatureProvider implements SignatureProvider {
    keys: Map<string, PrivateKey>;
    availableKeys: string[];
    constructor(privateKeys: string[]);
    getAvailableKeys(): Promise<string[]>;
    sign({ chainId, requiredKeys, serializedTransaction, serializedContextFreeData }: SignatureProviderArgs): Promise<{
        signatures: string[];
        serializedTransaction: Uint8Array;
        serializedContextFreeData: Uint8Array;
    }>;
}
export { PrivateKey, PublicKey, Signature, digestFromSerializedData, JsSignatureProvider, };
